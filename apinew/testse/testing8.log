{
    "event": "suiteStart",
    "suite": "tests",
    "tests": 39
}{
    "event": "suiteStart",
    "suite": "ApiTest",
    "tests": 7
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testPostuser"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testPostuser",
    "status": "fail",
    "time": 0.082004070281982,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\ApiTest.php",
            "line": 22,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "c@c.com",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'c@c.com'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testPostuserpass"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testPostuserpass",
    "status": "fail",
    "time": 0.021001100540161,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\ApiTest.php",
            "line": 28,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "12345",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected '12345'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testUserUpdate"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testUserUpdate",
    "status": "fail",
    "time": 0.016999959945679,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\ApiTest.php",
            "line": 42,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "dan",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'dan'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testRolePost"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testRolePost",
    "status": "fail",
    "time": 0.016000986099243,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\ApiTest.php",
            "line": 54,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "admin",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'admin'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testRole"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testRole",
    "status": "fail",
    "time": 0.016001224517822,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\ApiTest.php",
            "line": 62,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "admin",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'admin'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testRoleValue"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testRoleValue",
    "status": "fail",
    "time": 0.017000913619995,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\ApiTest.php",
            "line": 69,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "user",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'user'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "ApiTest",
    "test": "ApiTest::testPostUserCreate"
}{
    "event": "test",
    "suite": "ApiTest",
    "test": "ApiTest::testPostUserCreate",
    "status": "pass",
    "time": 0.005000114440918,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "suiteStart",
    "suite": "ExampleTest",
    "tests": 1
}{
    "event": "testStart",
    "suite": "ExampleTest",
    "test": "ExampleTest::testsourceeasy"
}{
    "event": "test",
    "suite": "ExampleTest",
    "test": "ExampleTest::testsourceeasy",
    "status": "pass",
    "time": 0.0080010890960693,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "suiteStart",
    "suite": "PracticeTest",
    "tests": 11
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testsourceeasy"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testsourceeasy",
    "status": "pass",
    "time": 0.0039999485015869,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testContinuousTests"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testContinuousTests",
    "status": "pass",
    "time": 0.0050008296966553,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserIndex"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserIndex",
    "status": "pass",
    "time": 0.0049998760223389,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testUserLoginPost"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testUserLoginPost",
    "status": "pass",
    "time": 0.0040009021759033,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserShow"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserShow",
    "status": "pass",
    "time": 0.0049998760223389,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserUpdate"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserUpdate",
    "status": "pass",
    "time": 0.0060009956359863,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserDelete"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetUserDelete",
    "status": "pass",
    "time": 0.004000186920166,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testPutUserUpdate"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testPutUserUpdate",
    "status": "pass",
    "time": 0.005000114440918,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetSessionStatus"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetSessionStatus",
    "status": "pass",
    "time": 0.005000114440918,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testUserSessionPost"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testUserSessionPost",
    "status": "pass",
    "time": 0.0049998760223389,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetroles"
}{
    "event": "test",
    "suite": "PracticeTest",
    "test": "PracticeTest::testGetroles",
    "status": "pass",
    "time": 0.0060009956359863,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "suiteStart",
    "suite": "ScopeTest",
    "tests": 5
}{
    "event": "testStart",
    "suite": "ScopeTest",
    "test": "ScopeTest::testGetScopeIndex"
}{
    "event": "test",
    "suite": "ScopeTest",
    "test": "ScopeTest::testGetScopeIndex",
    "status": "pass",
    "time": 0.0049998760223389,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "ScopeTest",
    "test": "ScopeTest::testScopePost"
}{
    "event": "test",
    "suite": "ScopeTest",
    "test": "ScopeTest::testScopePost",
    "status": "pass",
    "time": 0.0049998760223389,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "ScopeTest",
    "test": "ScopeTest::testGetScope"
}{
    "event": "test",
    "suite": "ScopeTest",
    "test": "ScopeTest::testGetScope",
    "status": "pass",
    "time": 0.005000114440918,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "ScopeTest",
    "test": "ScopeTest::testScopeDelete"
}{
    "event": "test",
    "suite": "ScopeTest",
    "test": "ScopeTest::testScopeDelete",
    "status": "pass",
    "time": 0.0039999485015869,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "ScopeTest",
    "test": "ScopeTest::testPutScopeUpdate"
}{
    "event": "test",
    "suite": "ScopeTest",
    "test": "ScopeTest::testPutScopeUpdate",
    "status": "pass",
    "time": 0.0050010681152344,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "suiteStart",
    "suite": "VendorContactTest",
    "tests": 2
}{
    "event": "testStart",
    "suite": "VendorContactTest",
    "test": "VendorContactTest::testGetVendorcontactIndex"
}{
    "event": "test",
    "suite": "VendorContactTest",
    "test": "VendorContactTest::testGetVendorcontactIndex",
    "status": "pass",
    "time": 0.0050010681152344,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorContactTest",
    "test": "VendorContactTest::testVendorcontactPost"
}{
    "event": "test",
    "suite": "VendorContactTest",
    "test": "VendorContactTest::testVendorcontactPost",
    "status": "fail",
    "time": 0.017001152038574,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\VendorContactTest.php",
            "line": 27,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "developer",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'developer'.",
    "output": ""
}{
    "event": "suiteStart",
    "suite": "VendorTest",
    "tests": 13
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testVendorPost"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testVendorPost",
    "status": "pass",
    "time": 0.005000114440918,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testGetVendorIndex"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testGetVendorIndex",
    "status": "pass",
    "time": 0.0050010681152344,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testVendorDelete"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testVendorDelete",
    "status": "pass",
    "time": 0.0049998760223389,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testPutVendorUpdate"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testPutVendorUpdate",
    "status": "pass",
    "time": 0.0060009956359863,
    "trace": [],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testFailureVendor"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testFailureVendor",
    "status": "fail",
    "time": 0.016000986099243,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\VendorTest.php",
            "line": 50,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "bangalore",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'bangalore'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testExceptionHasRightMessage"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testExceptionHasRightMessage",
    "status": "fail",
    "time": 0.018001079559326,
    "trace": [],
    "message": "Failed asserting that exception message 'Some Message' contains 'Right Message'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testExceptionMessageMatchesRegExp"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testExceptionMessageMatchesRegExp",
    "status": "fail",
    "time": 0.011000871658325,
    "trace": [],
    "message": "Failed asserting that exception message 'The Wrong Message' contains '\/Right.*\/'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testExceptionHasRightCode"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testExceptionHasRightCode",
    "status": "fail",
    "time": 0.020001888275146,
    "trace": [],
    "message": "Failed asserting that 10 is equal to expected exception code 20.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testException"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testException",
    "status": "fail",
    "time": 0.015001058578491,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\VendorTest.php",
            "line": 84,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "johnplayers",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'johnplayers'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testException2"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testException2",
    "status": "fail",
    "time": 0.015001058578491,
    "trace": [
        {
            "file": "E:\\wamp\\www\\apinew\\testse\\tests\\VendorTest.php",
            "line": 96,
            "function": "assertEquals",
            "class": "PHPUnit_Framework_Assert",
            "type": "::",
            "args": [
                "bangalore",
                null
            ]
        }
    ],
    "message": "Failed asserting that null matches expected 'bangalore'.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testExpectVendorActualName"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testExpectVendorActualName",
    "status": "fail",
    "time": 0.010999917984009,
    "trace": [],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testExpectVendorActualLocation"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testExpectVendorActualLocation",
    "status": "fail",
    "time": 0.01200008392334,
    "trace": [],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "VendorTest",
    "test": "VendorTest::testExpectVendorActualType"
}{
    "event": "test",
    "suite": "VendorTest",
    "test": "VendorTest::testExpectVendorActualType",
    "status": "fail",
    "time": 0.01400089263916,
    "trace": [],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}